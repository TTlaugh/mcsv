#!/bin/sh
# shellcheck disable=SC2086

set -e
pwd=$PWD
dir=/tmp/mcsv

die() { echo "$1"; exit 1; }

if [ -d "$dir" ]; then die "mcsv: another Minecraft Server is already running in background"; fi

if ! command -v java >/dev/null 2>&1; then die "Java is not installed!"; fi

opts="
-Xmx4096M
-Xms4096M
-XX:+AlwaysPreTouch
-XX:+DisableExplicitGC
-XX:+ParallelRefProcEnabled
-XX:+PerfDisableSharedMem
-XX:+UnlockExperimentalVMOptions
-XX:+UseG1GC
-XX:G1HeapRegionSize=8M
-XX:G1HeapWastePercent=5
-XX:G1MaxNewSizePercent=40
-XX:G1MixedGCCountTarget=4
-XX:G1MixedGCLiveThresholdPercent=90
-XX:G1NewSizePercent=30
-XX:G1RSetUpdatingPauseTimePercent=5
-XX:G1ReservePercent=20
-XX:InitiatingHeapOccupancyPercent=15
-XX:MaxGCPauseMillis=200
-XX:MaxTenuringThreshold=1
-XX:SurvivorRatio=32
-Dusing.aikars.flags=https://mcflags.emc.gs
-Daikars.new.flags=true
"

while getopts 'rd' opt; do
    case "$opt" in
        r) rmworld=true ;;
        d) daemon=true ;;
        *) echo "Invalid option!" ;;
    esac
done
shift $((OPTIND-1))

if [ -z "$1" ]; then die "Please specify Server version (the name of the folder contain server jar file)"; fi
cd "$1"

if [ "$rmworld" = true ];then
    rm -rfv ops.json permissions.yml usercache.json world*
fi

if [ "$daemon" = true ]; then
    mkdir -p "$dir"
    if [ ! -p "$dir"/in ]; then mkfifo "$dir"/in; fi
    tail -f "$dir"/in | ( nohup java $opts -jar ./*.jar nogui > "$dir"/out 2> "$dir"/err && rm -rf "$dir" ) || rm -rf "$dir" &
    echo "Server is starting in background..."
    echo "fd redirect to:
    stdin : $dir/in  (Control server by writing to this file)
    stdout: $dir/out (Check server log by reading this file)
    stderr: $dir/err (N/A)
    "
else
    java $opts -jar ./*.jar nogui
fi

cd "$pwd"
